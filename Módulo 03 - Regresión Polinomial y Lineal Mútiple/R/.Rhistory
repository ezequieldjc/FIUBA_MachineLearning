library(MASS)
library(ISLR)
Boston <- MASS::Boston
names(MASS::Boston)
lm.fit=lm(medv~lstat+age,data=Boston)
lm.fit=lm(medv ~ .,data=Boston)
summary(lm.fit)
names(summary(lm.fit))
summary(lm.fit)$r.squared
modelo = summary(lm.fit)$all
modelo = summary(lm.fit)$call
modelo
r2_aj = summary(lm.fit)$r.squared
mod.reg = summary(lm.fit)$call
rm(modelo)
mod.r2_aj= summary(lm.fit)$r.squared
rm(r2_aj)
mod.reg = as.character(summary(lm.fit)$call)
r2.ajustado = data.frame(modelo = mod.reg , r2_aj = mod.r2_aj, stringsAsFactors = F)
View(r2.ajustado)
View(r2.ajustado)
mod.reg = as.character(summary(lm.fit)$call)
mod.reg
mod.reg = (summary(lm.fit)$call)
mod.reg[2]
mod.reg = as.character(summary(lm.fit)$call)[2]
r2.ajustado = data.frame(modelo = mod.reg , r2_aj = mod.r2_aj, stringsAsFactors = F)
lm.fit=lm(medv ~ lstat + age ,data=Boston)
summary(lm.fit)
lm.fit=lm(medv ~ .,data=Boston)
summary(lm.fit)
lm.fit2 <-lm(medv~lstat*age,data=Boston)
lm.fit3=lm(medv~lstat+I(lstat^2),data=Boston)
summary(lm.fit2)
mod.reg = as.character(summary(lm.fit2)$call)[2]
mod.r2_aj= summary(lm.fit2)$r.squared
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
r2.ajustado
lm.fit3 = lm(medv ~ lstat + I(lstat^2),data=Boston)
summary(lm.fit3)
attach(Boston)
pred.fit3 = predict(lm.fit3, list(lstat = sort(Boston$lstat)))
# grafico ahora las predicciones para cada valor de lstat
par(mfrow=c(1,1))
attach(Boston)
plot(lstat, medv)
points(sort(lstat), pred.fit3, col='red', pch=20)
lm.fit4 <- lm(medv ~ poly(lstat, 4))
pred.fit4 = predict(lm.fit4, list(lstat=Boston$lstat))
points(lstat, pred.fit4, col='green', pch=20)
mod.reg = as.character(summary(lm.fit4)$call)[2]
mod.r2_aj = summary(lm.fit4)$r.squared
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
lm.fit5 = lm(medv ~ poly(lstat, 8), data=Boston)
mod.reg = as.character(summary(lm.fit5)$call)[2]
mod.r2_aj = summary(lm.fit5)$r.squared
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
pred.fit5 = predict(lm.fit5, list(lstat=Boston$lstat))
points(lstat, pred.fit5, col='blue', pch=20)
View(r2.ajustado)
View(r2.ajustado)
lm.fit2 = lm(medv ~ poly(lstat, 2), data=Boston)
mod.reg = as.character(summary(lm.fit2)$call)[2]
mod.r2_aj = summary(lm.fit2)$r.squared
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
pred.fit2 = predict(lm.fit2, list(lstat=Boston$lstat))
points(lstat, pred.fit5, col='blue', pch=20)
View(r2.ajustado)
View(r2.ajustado)
points(lstat, pred.fit5, col='yellow', pch=20)
points(lstat, pred.fit5, col='blue', pch=20)
points(lstat, pred.fit2, col='yellow', pch=20)
lm.fit18 = lm(medv ~ poly(lstat, 18), data=Boston)
mod.reg = as.character(summary(lm.fit18)$call)[2]
mod.r2_aj = summary(lm.fit18)$r.squared
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
pred.fit18 = predict(lm.fit18, list(lstat=Boston$lstat))
points(lstat, pred.fit18, col='yellow', pch=20)
points(lstat, pred.fit18, col='grey', pch=20)
r2.ajustado
lm.pol.mult <- lm(medv ~ poly(lstat, 2)+poly(age,3))
lm.log = lm(medv~log(lstat),data=Boston)
mod.reg = as.character(summary(lm.log)$call)[2]
mod.r2_aj = summary(lm.log)$r.squared
summary(lm.log)$r.squared
campos <- names(Boston)[-ncol(Boston)]
campo_max <- campos[1]
max.r2 <- 0
formula_ant <- "medv ~"
primer_pasada <- TRUE
modelos = data.frame(modelo=as.character(), r2aj=as.numeric(), stringsAsFactors = FALSE)
for (f in campos){
for (c in campos){
if (primer_pasada) {
formula <- paste(formula_ant,c)
}
else{
formula <- paste(formula_ant,"+",c)
}
lm.fit <- lm(formula, data=Boston)
r2 <- summary(lm.fit)$adj.r.squared
#print(paste(formula,r2))
modelos = rbind(modelos, data.frame("modelo"=formula, "r2aj"=r2))
if (r2 > max.r2) {
max.r2 <- r2
formula_max <- formula
}
}
#campos <- campos[!(campos==campo_max)]
campos <- campos[campos!=campo_max]
formula_ant <- formula_max
primer_pasada <- FALSE
}
modelos
max.r2
formula_max
Boston <- MASS::Boston
attach(MASS::Boston)
plot(lstat,medv, col="grey")
names(Boston)
############################################
#de a dos fuerza bruta
###########################################
Boston <- MASS::Boston
campos <- names(Boston)[-ncol(Boston)]
campo_max <- campos[1]
max.r2 <- 0
primer_pasada <- TRUE
for (i in 1:length(campos)){
formula_ant <- "medv ~"
for (j in 1:length(campos)){
if (j != i){
formula <- paste(formula_ant,campos[i],"+",campos[j])
print(formula)
lm.fit <- lm(formula, data=Boston)
r2 <- summary(lm.fit)$adj.r.squared
if (r2 > max.r2) {
max.r2 <- r2
formula_max <- formula
campo_max <- c
}
}
}
}
#resultados
max.r2
formula_max
# Impo
ds_reg = read.csv('C:/Users/charly/Desktop/UBA/UBA curso data Science/CLASE 5/Churn_Modelling.csv')
ds_reg = ds_reg[-c(1:3)]
# Impo
ds_reg = read.csv('C:\Users\cardo\Google Drive\4- Data Science\FIUBA - Curso Ciencia de Datos - 1er CUATRIMESTRE 2020\Módulo  04 - Validación, kNN y Regresión Logística')
ds_reg = ds_reg[-c(1:3)]
# Impo
ds_reg = read.csv('C:/Users/cardo/Google Drive/4- Data Science/FIUBA - Curso Ciencia de Datos - 1er CUATRIMESTRE 2020/Módulo  04 - Validación, kNN y Regresión Logística')
ds_reg = ds_reg[-c(1:3)]
# Impo
ds_reg = read.csv('C:Users/cardo/Google Drive/4- Data Science/FIUBA - Curso Ciencia de Datos - 1er CUATRIMESTRE 2020/Módulo  04 - Validación, kNN y Regresión Logística/Churn_Modelling.csv')
# Impo
ds_reg = read.csv('C:/Users/cardo/Desktop/Churn_Modelling.csv')
ds_reg = ds_reg[-c(1:3)]
# factorizo
ds_reg$Exited = factor(ds_reg$Exited, levels = c(0, 1))
# Train y test
str(ds_reg)
set.seed(5656)
train <- sample(10000, 8000)
training_set = ds_reg[train,]
test_set = ds_reg[-train,]
# modelo
classifier = glm(formula = Exited ~ .,family = binomial,data = training_set)
coef(classifier)
# Prediccion en el test
prob_pred = predict(classifier, type = 'response', newdata = test_set[-11])
class(prob_pred)
head(prob_pred)
y_pred = ifelse(prob_pred > 0.5, 1, 0)
head(y_pred)
y_pred[1:100]
library(MASS)
library(ISLR)
Boston <- MASS::Boston
names(MASS::Boston)
lm.fit=lm(medv ~ lstat + age ,data=Boston)
summary(lm.fit)
lm.fit=lm(medv ~ .,data=Boston)
summary(lm.fit)
names(summary(lm.fit))
summary(lm.fit)$r.squared
mod.reg = as.character(summary(lm.fit)$call)[2]
mod.r2_aj= summary(lm.fit)$r.squared
r2.ajustado = data.frame(modelo = mod.reg , r2_aj = mod.r2_aj, stringsAsFactors = F)
View(r2.ajustado)
View(r2.ajustado)
lm.fit2 <-lm(medv~lstat*age,data=Boston)
summary(lm.fit2)
mod.reg = as.character(summary(lm.fit2)$call)[2]
mod.r2_aj= summary(lm.fit2)$r.squared
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
lm.fit3 = lm(medv ~ lstat + I(lstat^2),data=Boston)
lm.fit3 = lm(medv ~ lstat + I(lstat^2),data=Boston)
summary(lm.fit3)
lm.fit3 = lm(medv ~ lstat + I(lstat^2),data=Boston)
summary(lm.fit3)
attach(Boston)
pred.fit3 = predict(lm.fit3, list(lstat = sort(Boston$lstat)))
# grafico ahora las predicciones para cada valor de lstat
par(mfrow=c(1,1))
attach(Boston)
plot(lstat, medv)
points(sort(lstat), pred.fit3, col='red', pch=20)
#las prediccines están ordenadas en función de sort(lstat)
head(lstat)
head(sort(lstat))
head(pred.fit3)
lm.fit4 <- lm(medv ~ poly(lstat, 4))
mod.reg = as.character(summary(lm.fit4)$call)[2]
mod.r2_aj = summary(lm.fit4)$r.squared
mod.r2_aj = summary(lm.fit4)
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
mod.r2_aj = summary(lm.fit4)$r.squared
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
summary(lm.fit4)
pred.fit4 = predict(lm.fit4, list(lstat=Boston$lstat))
points(lstat, pred.fit4, col='green', pch=20)
lm.fit5 = lm(medv ~ poly(lstat, 8), data=Boston)
mod.reg = as.character(summary(lm.fit5)$call)[2]
mod.r2_aj = summary(lm.fit5)$r.squared
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
pred.fit5 = predict(lm.fit5, list(lstat=Boston$lstat))
points(lstat, pred.fit5, col='blue', pch=20)
lm.fit2 = lm(medv ~ poly(lstat, 2), data=Boston)
mod.reg = as.character(summary(lm.fit2)$call)[2]
mod.r2_aj = summary(lm.fit2)$r.squared
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
pred.fit2 = predict(lm.fit2, list(lstat=Boston$lstat))
points(lstat, pred.fit2, col='yellow', pch=20)
lm.fit18 = lm(medv ~ poly(lstat, 18), data=Boston)
mod.reg = as.character(summary(lm.fit18)$call)[2]
mod.r2_aj = summary(lm.fit18)$r.squared
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
pred.fit18 = predict(lm.fit18, list(lstat=Boston$lstat))
points(lstat, pred.fit18, col='grey', pch=20)
lm.pol.mult <- lm(medv ~ poly(lstat, 2)+poly(age,3))
View(r2.ajustado)
View(r2.ajustado)
# -->  ACTIVIDAD 9: ARMAR PREDICTOR, PLOTEAR, Y CARGAR EN DATFRAME DE REGRESION
mod.reg = as.character(summary(lm.fit18)$call)[2]
lm.pol.mult <- lm(medv ~ poly(lstat, 2)+poly(age,3))
# -->  ACTIVIDAD 9: ARMAR PREDICTOR, PLOTEAR, Y CARGAR EN DATFRAME DE REGRESION
mod.reg = as.character(summary(lm.fit18)$call)[2]
mod.r2_aj = summary(lm.fit18)$r.squared
r2.ajustado = rbind(r2.ajustado, list(mod.reg, mod.r2_aj))
pred.pol.mult = predict(lm.pol.mult, list(lstat=Boston$lstat, age=Boston$age))
points(lstat, pred.pol.mult, col='blue', pch=20)
summary(lm.fit18)
lm.pol.mult <- lm(medv ~ poly(lstat, 2)+poly(age,3))
summary(lm.pol.mult)
lm.log = lm(medv~log(lstat),data=Boston)
summary(lm.log)
# y también,porque no, aplicar una transformación sobre la variable objetivo
lm.log.obj = lm(log(medv)~poly(lstat, 4),data=Boston)
# y también,porque no, aplicar una transformación sobre la variable objetivo
lm.log.obj = lm(log(medv)~poly(lstat, 4),data=Boston)
summary(lm.log.obj)
clear
clear()
############################################
#de a dos fuerza bruta
###########################################
Boston <- MASS::Boston
campos <- names(Boston)[-ncol(Boston)]
campo_max <- campos[1]
max.r2 <- 0
primer_pasada <- TRUE
for (i in 1:length(campos)){
formula_ant <- "medv ~"
for (j in 1:length(campos)){
if (j != i){
formula <- paste(formula_ant,campos[i],"+",campos[j])
print(formula)
lm.fit <- lm(formula, data=Boston)
r2 <- summary(lm.fit)$adj.r.squared
if (r2 > max.r2) {
max.r2 <- r2
formula_max <- formula
campo_max <- c
}
}
}
}
#resultados
max.r2
formula_max
campos <- names(Boston)[-ncol(Boston)]
campo_max <- campos[1]
max.r2 <- 0
formula_ant <- "medv ~"
primer_pasada <- TRUE
modelos = data.frame(modelo=as.character(), r2aj=as.numeric(), stringsAsFactors = FALSE)
for (f in campos){
for (c in campos){
if (primer_pasada) {
formula <- paste(formula_ant,c)
}
else{
formula <- paste(formula_ant,"+",c)
}
lm.fit <- lm(formula, data=Boston)
r2 <- summary(lm.fit)$adj.r.squared
#print(paste(formula,r2))
modelos = rbind(modelos, data.frame("modelo"=formula, "r2aj"=r2))
if (r2 > max.r2) {
max.r2 <- r2
formula_max <- formula
}
}
#campos <- campos[!(campos==campo_max)]
campos <- campos[campos!=campo_max]
formula_ant <- formula_max
primer_pasada <- FALSE
}
modelos
max.r2
formula_max
View(modelos)
View(modelos)
