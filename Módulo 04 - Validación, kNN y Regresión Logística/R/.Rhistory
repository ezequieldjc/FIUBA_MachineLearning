library(class)
library(ISLR)
ds = read.csv('C:/Users/charly/Desktop/UBA/UBA curso data Science/CLASE 5/Churn_Modelling.csv')
View(ds)
ds = read.csv('C:/Users/cardo/Desktop/Churn_Modelling.csv')
View(ds)
df[ds-1]
df=ds[-1]
ds=ds[-1]
rm(df)
ds=ds[-c(1:3)]
View(ds)
View(ds)
ds = read.csv('C:/Users/cardo/Desktop/Churn_Modelling.csv')
# saco los campos innecesarios: RowNumber, CustomerId, Surname
ds <- ds[-c(1:3)]
ds$Exited <- as.factor(ds$Exited)
str(ds)
set.seed(123)
train <- sample(10000, 8000)
ds$Geography <- as.numeric(ds$Geography)
ds$Gender <- as.numeric(ds$Gender)
str(ds)
set.seed=132
sample(10000, 8000)
sample(10000, 8000)
set.seed(123)
sample(10000, 8000)
sample(10000, 8000)
sample(10000, 8000)
sample(10000, 8000)
sample(10000, 8000)
set.seed(123)
sample(10000, 8000)
set.seed(123)
sample(10000, 8000)
set.seed(123)
sample(10000, 8000)
?set.seed
View(ds[train, -11])
View(ds[-train, -11])
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=3)
str(test)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=5)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=6)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=4)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=2)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=10)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=15)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=20)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=50)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=100)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=200)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=80)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=60)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=40)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=30)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=25)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=27)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=29)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=30)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=30)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=30)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=29)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=31)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=35)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=35)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
table(y_prueba_estimado, y_prueba_reales)
tc = table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=40)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=50)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
tc = table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=100)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
tc = table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=50)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
tc = table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=40)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
tc = table(y_prueba_estimado, y_prueba_reales)
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=45)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
tc = table(y_prueba_estimado, y_prueba_reales)
aciertos = tc[1,1] + tc[2,2]
total = 0.2 * nrow(ds)
accuracy = aciertos/total
error_prueba =  1 - accuracy
tc[1,1]
tc[2,2]
tc[2,1]
tc[1,2]
tc = table(y_prueba_estimado, y_prueba_reales)
tc
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=25)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
tc = table(y_prueba_estimado, y_prueba_reales)
tc
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=15)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
tc = table(y_prueba_estimado, y_prueba_reales)
tc
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=8)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
tc = table(y_prueba_estimado, y_prueba_reales)
tc
knn.pred=knn(ds[train,-11],ds[-train,-11],ds$Exited[train],k=4)
y_prueba_estimado = knn.pred
y_prueba_reales = ds[-train, 'Exited']
tc = table(y_prueba_estimado, y_prueba_reales)
tc
aciertos = tc[1,1] + tc[2,2]
tc[1,1]
tc[1,2]
total = 0.2 * nrow(ds)
accuracy = aciertos/total
error_prueba =  1 - accuracy
# Impo
ds_reg = read.csv('C:/Users/cardo/Desktop/Churn_Modelling.csv')
ds_reg = ds_reg[-c(1:3)]
# factorizo
ds_reg$Exited = factor(ds_reg$Exited, levels = c(0, 1))
# Train y test
str(ds_reg)
set.seed(5656)
train <- sample(10000, 8000)
training_set = ds_reg[train,]
test_set = ds_reg[-train,]
# modelo
classifier = glm(formula = Exited ~ ., family = binomial, data = training_set)
coef(classifier)
# Prediccion en el test
prob_pred = predict(classifier, type = 'response', newdata = test_set[-11])
?glm
class(prob_pred)
head(prob_pred)
y_pred = ifelse(prob_pred > 0.5, 1, 0)
head(y_pred)
y_pred[1:100]
y_real = df[-train, 11]
table(y_pred, y_real)
y_real = ds[-train, 11]
head(y_pred)
y_pred[1:100]
table(y_pred, y_real)
y_pred = ifelse(prob_pred > 0.6, 1, 0)
y_real = ds[-train, 11]
head(y_pred)
y_pred[1:100]
table(y_pred, y_real)
